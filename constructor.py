

# This file was *autogenerated* from the file constructor.sage
from sage.all_cmdline import *   # import sage library
import os 

q = input("Cardinality of the finite field (extensions are given by the element a): ")
deg_seq = input("Sequence of coefficients: (e.g. x^2 + 2 would be [2, 0, 1])" )
ffmpeg = input("Do you have ffmpeg installed? (True or False)")
 
f = open("gif_maker.sage", "w+")
f.write("import os                                                                          \n")
f.write("from sage.plot.colors import rainbow                                               \n")
##f.write("import functions                                                                 \n")
f.write("from functions import graphField, plotGraph, rightEdges, dynamics, makeimages, p   \n")

f.write("K.<a> = GF(%s,'a') \n" % q)
f.write("f = p(%s)          \n" % deg_seq)
f.write("elements = [x for x in K]                            \n")
f.write("vs = graphField(K).vertices()                        \n")
f.write("newelements = []                                     \n")
f.write("for i in range(len(elements)):                       \n")
f.write("   if str(elements[i]) != vs[i]:                     \n")
f.write("       for b in elements:                            \n")
f.write("           if str(b) == vs[i]:                       \n")
f.write("               newelements.append(b)                 \n")
f.write("   else:                                             \n")
f.write("       newelements.append(elements[i])               \n")
f.write("qs = []                                              \n")
f.write("for c in newelements:                                \n")
f.write("   qs += 30*[makeimages(K,f,c,figuresize=(7,7))[-1]]  \n")
f.write("anim = animate(qs)                                   \n")
if not ffmpeg:
    f.write("anim.save(filename=\"gifs/%s_%s.gif\")                  \n" % (deg_seq, q))
elif ffmpeg:
    f.write("anim.ffmpeg(savefile=\"gifs/%s_%s.gif\")            \n" % (deg_seq, q))
f.close()
os.system("sage --preparse gif_maker.sage")
os.system("mv gif_maker.sage.py gif_maker.py")
os.system("rm gif_maker.sage")
os.system("sage gif_maker.py")


